---
import { Code } from "astro/components";
import { Image } from "astro:assets";
import ShareButton from "./ShareButton.astro";
import SnippetStars from "./SnippetStars.tsx";
import TagLabel from "./TagLabel.astro";
import Typography from "./Typography.astro";

interface Props {
  snippet: SnippetApiResponse;
}

const baseUrl = Astro.site;
const { snippet } = Astro.props;
const { id, title, description, language, code, tags } = snippet;

const excerpt =
  description && description?.length > 100
    ? description.slice(0, 100) + "..."
    : description;
---

<div
  class="group flex flex-col bg-[#1e1e1e] shadow-md rounded-sm border border-transparent transition duration-400 p-4 hover:bg-fuchsia-300/15 hover:border-fuchsia-200"
>
  <header class="flex flex-row items-start justify-between mb-4">
    <div class="space-y-1">
      <Image
        src={`/icons/${language}.svg`}
        alt={`${language} logo`}
        width={18}
        height={18}
      />
      <Typography as="h2" variant="h4" color="white">
        {title}
      </Typography>
    </div>
  </header>
  <div class="relative">
    <Code
      code={code}
      lang={language as any}
      theme="dracula"
      class="p-3 h-46 rounded mask-b-from-55% mask-b-to-100% mb-6 text-xs leading-4 !overflow-hidden transition-all duration-300"
    />
    <ShareButton url={`${baseUrl?.href}snippet/${id}`} />
  </div>

  {
    description !== null && (
      <Typography as="p" variant="small" color="neutral">
        {excerpt}
      </Typography>
    )
  }

  {
    tags && tags.length > 0 && (
      <div class="flex flex-wrap gap-1 mt-4 mb-6">
        {tags.map(({ name }) => (
          <TagLabel tag={name} />
        ))}
      </div>
    )
  }
  <footer class="flex items-end justify-between mt-auto">
    <a href={`/snippet/${id}`} class="text-fuchsia-200 hover:underline">
      View Snippet
    </a>
    <SnippetStars id={id} client:load />
  </footer>
</div>
